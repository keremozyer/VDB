// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VDB.MicroServices.CVEData.DB.Context;

namespace VDB.MicroServices.CVEData.DB.Context.Migrations
{
    [DbContext(typeof(CVEDataDataContext))]
    [Migration("20210728095047_DownloadLogMigration")]
    partial class DownloadLogMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CPECVENode", b =>
                {
                    b.Property<Guid>("CPEsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CVENodesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CPEsId", "CVENodesId");

                    b.HasIndex("CVENodesId");

                    b.ToTable("CPECVENode");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CPE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVulnerable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SpecificVersion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("URI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionEndExcluding")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VersionEndIncluding")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VersionStartExcluding")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VersionStartIncluding")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("DeletedAt", "ProductId", "SpecificVersion", "VersionStartIncluding", "VersionEndIncluding", "VersionStartExcluding", "VersionEndExcluding");

                    b.ToTable("CPEs");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CVE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVEID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DeletedAt", "CVEID");

                    b.ToTable("CVEs");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CVEDownloadLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CVEDataTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDownloadBySearch")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CVEDownloadLogs");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CVENode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CVEId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CVEId");

                    b.HasIndex("ParentNodeId");

                    b.ToTable("CVENodes");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.HasIndex("DeletedAt", "Name");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeletedAt", "Name");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("CPECVENode", b =>
                {
                    b.HasOne("VDB.MicroServices.CVEData.Model.Entity.POCO.CPE", null)
                        .WithMany()
                        .HasForeignKey("CPEsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.CVEData.Model.Entity.POCO.CVENode", null)
                        .WithMany()
                        .HasForeignKey("CVENodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CPE", b =>
                {
                    b.HasOne("VDB.MicroServices.CVEData.Model.Entity.POCO.Product", "Product")
                        .WithMany("CPEs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CVENode", b =>
                {
                    b.HasOne("VDB.MicroServices.CVEData.Model.Entity.POCO.CVE", "CVE")
                        .WithMany("Nodes")
                        .HasForeignKey("CVEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.CVEData.Model.Entity.POCO.CVENode", "ParentNode")
                        .WithMany("ChildrenNodes")
                        .HasForeignKey("ParentNodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CVE");

                    b.Navigation("ParentNode");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.Product", b =>
                {
                    b.HasOne("VDB.MicroServices.CVEData.Model.Entity.POCO.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CVE", b =>
                {
                    b.Navigation("Nodes");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.CVENode", b =>
                {
                    b.Navigation("ChildrenNodes");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.Product", b =>
                {
                    b.Navigation("CPEs");
                });

            modelBuilder.Entity("VDB.MicroServices.CVEData.Model.Entity.POCO.Vendor", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
