using System;
using System.Collections.Generic;
using System.ComponentModel;

namespace VDB.MicroServices.VulnerabilityDetector.Model.Exchange.Report.SearchReports
{
    [DisplayName("Rapor Arama İsteği")]
    public record SearchReportsRequestModel
    {
        /// <summary>
        /// If only a single report is requested its id.
        /// </summary>
        [DisplayName("Rapor IDsi")]
        public Guid? ReportID { get; set; }
        /// <summary>
        /// Which page to fetch. Must start from 1 for paging to work. If set to 0 all items will be returned.
        /// </summary>
        [DisplayName("Sayfa Sayısı")]
        public int PageIndex { get; set; }
        /// <summary>
        /// Count of elements in a page. If set to 0 all items will be returned.
        /// </summary>
        [DisplayName("Sayfa Boyutu")]
        public int PageSize { get; set; }
        /// <summary>
        /// Starting date of ReportCreationDate. Will be treated as UTC.
        /// </summary>
        [DisplayName("Başlangıç Tarihi")]
        public DateTime? StartingDate { get; set; }
        /// <summary>
        /// Ending date of ReportCreationDate. Will be treated as UTC.
        /// </summary>
        [DisplayName("Bitiş Tarihi")]
        public DateTime? EndingDate { get; set; }
        /// <summary>
        /// Report statuses to filter by. Can be { { "WAIT": "Waiting for scan" }, { "PROC": "Scanning right now" }, { "CMP": "Completed" }, { "ERR", "An error occurred during report creation" } }
        /// </summary>
        [DisplayName("Rapor Durumları")]
        public IEnumerable<string> Statuses { get; set; }
    }
}
