using System;
using System.Linq.Expressions;
using System.Threading.Tasks;
using VDB.MicroServices.VulnerabilityDetector.DB.UnitOfWork;
using VDB.MicroServices.VulnerabilityDetector.Manager.Operation.Interface;
using VDB.MicroServices.VulnerabilityDetector.Model.Entity;

namespace VDB.MicroServices.VulnerabilityDetector.Manager.Operation.Implementation
{
    public class ProductOperations : IProductOperations
    {
        private readonly IVulnerabilityDetectorUnitOfWork DB;

        public ProductOperations(IVulnerabilityDetectorUnitOfWork db)
        {
            this.DB = db;
        }

        public void Create(Product product)
        {
            this.DB.ProductRepository.Create(product);
        }

        public Task<Product> GetByProductAndVendorNameAsync(string productName, string vendorName, params Expression<Func<Product, object>>[] includes)
        {
            return this.DB.ProductRepository.GetFirstAsync(p => p.Name == productName.ToLower().Trim() && p.Vendor.Name == vendorName.ToLower().Trim(), includes: includes);
        }

        public void Update(Product product)
        {
            this.DB.ProductRepository.Update(product);
        }
    }
}
