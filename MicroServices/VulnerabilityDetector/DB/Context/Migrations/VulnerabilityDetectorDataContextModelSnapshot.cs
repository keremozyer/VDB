// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VDB.MicroServices.VulnerabilityDetector.DB.Context;

namespace VDB.MicroServices.VulnerabilityDetector.DB.Context.Migrations
{
    [DbContext(typeof(VulnerabilityDetectorDataContext))]
    partial class VulnerabilityDetectorDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CVEProductVersion", b =>
                {
                    b.Property<Guid>("IgnoredCVEsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IgnoredProductVersionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IgnoredCVEsId", "IgnoredProductVersionsId");

                    b.HasIndex("IgnoredProductVersionsId");

                    b.ToTable("CVEProductVersion");
                });

            modelBuilder.Entity("ReportContentServer", b =>
                {
                    b.Property<Guid>("ReportContentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReportContentsId", "ServersId");

                    b.HasIndex("ServersId");

                    b.ToTable("ReportContentServer");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.CVE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVEID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CVEs");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.CVEMatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CVEId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MatchType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReportContentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CVEId");

                    b.HasIndex("ReportContentId");

                    b.ToTable("CVEMatches");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ProductVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVersions");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ReportContent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductVersionId");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportContents");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Server", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.VulnerabilityReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Base64ReportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReportCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VulnerabilityReports");
                });

            modelBuilder.Entity("CVEProductVersion", b =>
                {
                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.CVE", null)
                        .WithMany()
                        .HasForeignKey("IgnoredCVEsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ProductVersion", null)
                        .WithMany()
                        .HasForeignKey("IgnoredProductVersionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReportContentServer", b =>
                {
                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ReportContent", null)
                        .WithMany()
                        .HasForeignKey("ReportContentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Server", null)
                        .WithMany()
                        .HasForeignKey("ServersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.CVEMatch", b =>
                {
                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.CVE", "CVE")
                        .WithMany("CVEMatches")
                        .HasForeignKey("CVEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ReportContent", "ReportContent")
                        .WithMany("CVEMatches")
                        .HasForeignKey("ReportContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CVE");

                    b.Navigation("ReportContent");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Product", b =>
                {
                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ProductVersion", b =>
                {
                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Product", "Product")
                        .WithMany("ProductVersions")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ReportContent", b =>
                {
                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ProductVersion", "ProductVersion")
                        .WithMany()
                        .HasForeignKey("ProductVersionId");

                    b.HasOne("VDB.MicroServices.VulnerabilityDetector.Model.Entity.VulnerabilityReport", "Report")
                        .WithMany("Contents")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductVersion");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.CVE", b =>
                {
                    b.Navigation("CVEMatches");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Product", b =>
                {
                    b.Navigation("ProductVersions");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.ReportContent", b =>
                {
                    b.Navigation("CVEMatches");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.Vendor", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("VDB.MicroServices.VulnerabilityDetector.Model.Entity.VulnerabilityReport", b =>
                {
                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
