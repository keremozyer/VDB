using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace VDB.MicroServices.VulnerabilityDetector.DB.Context.Migrations
{
    public partial class mig2 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "CVEReportContent");

            migrationBuilder.CreateTable(
                name: "CVEMatches",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CVEId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ReportContentId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    LastModifiedDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    MatchType = table.Column<int>(type: "int", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime2", nullable: false),
                    LastUpdatedAt = table.Column<DateTime>(type: "datetime2", nullable: true),
                    DeletedAt = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CVEMatches", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CVEMatches_CVEs_CVEId",
                        column: x => x.CVEId,
                        principalTable: "CVEs",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_CVEMatches_ReportContents_ReportContentId",
                        column: x => x.ReportContentId,
                        principalTable: "ReportContents",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_CVEMatches_CVEId",
                table: "CVEMatches",
                column: "CVEId");

            migrationBuilder.CreateIndex(
                name: "IX_CVEMatches_ReportContentId",
                table: "CVEMatches",
                column: "ReportContentId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "CVEMatches");

            migrationBuilder.CreateTable(
                name: "CVEReportContent",
                columns: table => new
                {
                    CVEsId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ReportContentsId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CVEReportContent", x => new { x.CVEsId, x.ReportContentsId });
                    table.ForeignKey(
                        name: "FK_CVEReportContent_CVEs_CVEsId",
                        column: x => x.CVEsId,
                        principalTable: "CVEs",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_CVEReportContent_ReportContents_ReportContentsId",
                        column: x => x.ReportContentsId,
                        principalTable: "ReportContents",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_CVEReportContent_ReportContentsId",
                table: "CVEReportContent",
                column: "ReportContentsId");
        }
    }
}
