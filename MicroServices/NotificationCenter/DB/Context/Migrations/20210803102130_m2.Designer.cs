// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VDB.MicroServices.NotificationCenter.DB.Context;

namespace VDB.MicroServices.NotificationCenter.DB.Context.Migrations
{
    [DbContext(typeof(NotificationCenterDataContext))]
    [Migration("20210803102130_m2")]
    partial class m2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NotificationAudienceNotificationContext", b =>
                {
                    b.Property<Guid>("NotificationAudiencesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NotificationContextsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationAudiencesId", "NotificationContextsId");

                    b.HasIndex("NotificationContextsId");

                    b.ToTable("NotificationAudienceNotificationContext");
                });

            modelBuilder.Entity("NotificationAudienceNotificationType", b =>
                {
                    b.Property<Guid>("NotificationAudiencesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NotificationTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationAudiencesId", "NotificationTypesId");

                    b.HasIndex("NotificationTypesId");

                    b.ToTable("NotificationAudienceNotificationType");
                });

            modelBuilder.Entity("NotificationContextNotificationType", b =>
                {
                    b.Property<Guid>("NotificationContextsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NotificationTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationContextsId", "NotificationTypesId");

                    b.HasIndex("NotificationTypesId");

                    b.ToTable("NotificationContextNotificationType");
                });

            modelBuilder.Entity("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationAudience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Receiver")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationAudiences");
                });

            modelBuilder.Entity("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationContext", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationContexts");
                });

            modelBuilder.Entity("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationTypes");
                });

            modelBuilder.Entity("NotificationAudienceNotificationContext", b =>
                {
                    b.HasOne("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationAudience", null)
                        .WithMany()
                        .HasForeignKey("NotificationAudiencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationContext", null)
                        .WithMany()
                        .HasForeignKey("NotificationContextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NotificationAudienceNotificationType", b =>
                {
                    b.HasOne("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationAudience", null)
                        .WithMany()
                        .HasForeignKey("NotificationAudiencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationType", null)
                        .WithMany()
                        .HasForeignKey("NotificationTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NotificationContextNotificationType", b =>
                {
                    b.HasOne("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationContext", null)
                        .WithMany()
                        .HasForeignKey("NotificationContextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VDB.MicroServices.NotificationCenter.Model.Entity.POCO.NotificationType", null)
                        .WithMany()
                        .HasForeignKey("NotificationTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
