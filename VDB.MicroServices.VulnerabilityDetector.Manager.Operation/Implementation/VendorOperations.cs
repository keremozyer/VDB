using System.Threading.Tasks;
using VDB.MicroServices.VulnerabilityDetector.DB.UnitOfWork;
using VDB.MicroServices.VulnerabilityDetector.Manager.Operation.Interface;
using VDB.MicroServices.VulnerabilityDetector.Model.Entity;

namespace VDB.MicroServices.VulnerabilityDetector.Manager.Operation.Implementation
{
    public class VendorOperations : IVendorOperations
    {
        private readonly IVulnerabilityDetectorUnitOfWork DB;

        public VendorOperations(IVulnerabilityDetectorUnitOfWork db)
        {
            this.DB = db;
        }

        public void Create(Vendor vendor)
        {
            this.DB.VendorRepository.Create(vendor);
        }

        public async Task<Vendor> GetByNameAsync(string name)
        {
            return await this.DB.VendorRepository.GetFirstAsync(v => v.Name == name.Trim().ToLower());
        }
    }
}
