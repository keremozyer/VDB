using VDB.Architecture.Data.Repository.Base;
using VDB.Architecture.Data.UnitOfWork;
using VDB.MicroServices.VulnerabilityDetector.DB.Context;
using VDB.MicroServices.VulnerabilityDetector.DB.Repository.EntityFramework;
using VDB.MicroServices.VulnerabilityDetector.Model.Entity;

namespace VDB.MicroServices.VulnerabilityDetector.DB.UnitOfWork
{
    public class VulnerabilityDetectorUnitOfWork : BaseUnitOfWork, IVulnerabilityDetectorUnitOfWork
    {
        public VulnerabilityDetectorUnitOfWork(VulnerabilityDetectorDataContext context) : base(context) { }

        private VulnerabilityReportRepository vulnerabilityReportRepository { get; set; }
        public IRepository<VulnerabilityReport> VulnerabilityReportRepository { get { if (vulnerabilityReportRepository == null) { vulnerabilityReportRepository = new VulnerabilityReportRepository((VulnerabilityDetectorDataContext)context); } return vulnerabilityReportRepository; } }
    }
}
