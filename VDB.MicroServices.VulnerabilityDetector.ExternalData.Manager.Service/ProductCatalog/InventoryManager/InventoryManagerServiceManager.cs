using AutoMapper;
using Microsoft.Extensions.Options;
using System.Net.Http;
using System.Threading.Tasks;
using VDB.Architecture.Concern.ExtensionMethods;
using VDB.MicroServices.VulnerabilityDetector.Concern.Options;
using VDB.MicroServices.VulnerabilityDetector.ExternalData.Manager.Contract;
using VDB.MicroServices.VulnerabilityDetector.ExternalData.Model.ProductCatalog.GetCatalog;
using VDB.MicroServices.VulnerabilityDetector.Model.DTO.ProductCatalog;

namespace VDB.MicroServices.VulnerabilityDetector.ExternalData.Manager.Service.ProductCatalog.InventoryManager
{
    public class InventoryManagerServiceManager : IProductCatalogServiceManager
    {
        private readonly InventoryManagerSettings InventoryManagerSettings;
        private readonly HttpClient HttpClient;
        private readonly IMapper Mapper;

        public InventoryManagerServiceManager(IOptions<EndpointSettings> endpointSettings, HttpClient httpClient, IMapper mapper)
        {
            this.InventoryManagerSettings = endpointSettings.Value.InventoryManager;
            this.HttpClient = httpClient;
            this.Mapper = mapper;
        }

        public async Task<Catalog> GetCatalog()
        {
            HttpResponseMessage httpResponse = await this.HttpClient.GetAsync(this.InventoryManagerSettings.GetCatalogEndpoint);

            GetCatalogResponseModel response = (await httpResponse.Content.ReadAsStringAsync()).DeserializeJSON<GetCatalogResponseModel>();

            return this.Mapper.Map<Catalog>(response);
        }
    }
}
